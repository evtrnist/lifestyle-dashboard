name: Build & Deploy

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  OWNER: ${{ secrets.GHCR_OWNER }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-push:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Build all NX projects
        run: npm run build:all

      - name: Set up QEMU for ARM emulation
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_TOKEN }}" \
          | docker login ghcr.io -u "${{ secrets.GHCR_OWNER }}" --password-stdin

      - name: Build & push API image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.api
          platforms: linux/arm64
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.OWNER }}/lifestyle-api:${{ env.IMAGE_TAG }}

      - name: Build & push Frontend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.front
          platforms: linux/arm64
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.OWNER }}/lifestyle-front:${{ env.IMAGE_TAG }}

  deploy:
    name: Deploy to Raspberry Pi (K3s)
    needs: build-and-push
    runs-on: ubuntu-latest
    env:
      KUBECONFIG: ${{ github.workspace }}/kubeconfig
    steps:
      - name: Checkout lifestyle-k8s
        uses: actions/checkout@v3
        with:
          repository: evtrnist/lifestyle-k8s
          token: ${{ secrets.GHCR_TOKEN }}
          path: k8s

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure kubeconfig
        run: echo "${{ secrets.RPI_KUBECONFIG }}" | base64 -d > $KUBECONFIG

      - name: Connect to Tailscale
        run: |
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo tailscale up --authkey ${{ secrets.TAILSCALE_CI_KEY }} --hostname=ci-runner

      - name: Deploy backend manifest
        run: envsubst < k8s/base/lifestyle-api/deployment.yml | kubectl apply -f -

      - name: Deploy frontend manifest
        run: envsubst < k8s/base/lifestyle-front/deployment.yml | kubectl apply -f -
