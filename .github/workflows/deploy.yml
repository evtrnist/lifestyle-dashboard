name: Build and Deploy to Raspberry Pi

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build NX Projects
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci

      - name: Build API
        run: npx nx build api --configuration=production

      - name: Build Frontend
        run: npx nx build front --configuration=production

      - name: Upload dist folder
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: ./dist/

  docker:
    name: Build and Push Docker Images
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download dist from previous job
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: .

      - name: Connect to Tailscale
        run: |
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo tailscale up --authkey ${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-ci-runner --timeout=30s
          tailscale status

      - name: Allow insecure registry
        run: |
          echo '{ "insecure-registries": ["${{ secrets.REGISTRY_URL }}"] }' | sudo tee /etc/docker/daemon.json
          sudo systemctl restart docker

      - name: Login to Raspberry Pi Registry
        run: |
          echo "${{ secrets.CR_PASSWORD }}" | docker login http://${{ secrets.REGISTRY_URL }} -u ${{ secrets.CR_USER }} --password-stdin

      - name: Build and push backend (NestJS)
        run: |
          docker build --platform linux/arm64 -t ${{ secrets.REGISTRY_URL }}/lifestyle-api:latest -f Dockerfile.api .
          docker push ${{ secrets.REGISTRY_URL }}/lifestyle-api:latest

      - name: Build and push frontend (Angular)
        run: |
          docker build --platform linux/arm64 -t ${{ secrets.REGISTRY_URL }}/lifestyle-front:latest -f Dockerfile.front .
          docker push ${{ secrets.REGISTRY_URL }}/lifestyle-front:latest
