name: Build & Deploy

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  OWNER: ${{ secrets.GHCR_OWNER }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-push:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Build all NX projects
        run: npm run build:all

      - name: Log in to GHCR
        run: echo "${{ secrets.GHCR_TOKEN }}" \
             | docker login ghcr.io -u "${{ secrets.GHCR_OWNER }}" --password-stdin

      - name: Build & push API image
        run: |
          docker build \
            --file Dockerfile.api \
            --platform linux/arm64 \
            -t $REGISTRY/$OWNER/lifestyle-api:$IMAGE_TAG .
          docker push $REGISTRY/$OWNER/lifestyle-api:$IMAGE_TAG

      - name: Build & push Frontend image
        run: |
          docker build \
            --file Dockerfile.front \
            --platform linux/arm64 \
            -t $REGISTRY/$OWNER/lifestyle-front:$IMAGE_TAG .
          docker push $REGISTRY/$OWNER/lifestyle-front:$IMAGE_TAG

  deploy:
    name: Deploy to Raspberry Pi (K3s)
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure Kubeconfig
        run: |
          echo "${{ secrets.RPI_KUBECONFIG }}" | base64 -d > kubeconfig
          export KUBECONFIG=./kubeconfig

      - name: Deploy manifests
        run: |
          # если в ваших манифестах есть переменные $IMAGE_TAG, подставляем:
          envsubst < k8s/backend-deploy.yaml  | kubectl apply -f -
          envsubst < k8s/frontend-deploy.yaml | kubectl apply -f -
